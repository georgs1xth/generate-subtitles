extends ../layout

block content

  include ../styles/styles-global
  include styles-player

  main
    section.video-container
      video#player(playsinline controls='' autoplay='true' name='media' preload="auto")
        // file extension includes the .
        source(src=`${filePathWithoutExtension}${processingData.fileExtension}`)
        // TODO: replace with loop (has to fix on the backend)
        if languagesToLoop.length > 0
          each loopLanguage in languagesToLoop
            track(kind='captions' label=loopLanguage.name srclang=loopLanguage.languageCode src=`${filePathWithoutExtension}_${loopLanguage.name}.vtt` default='')
          track(kind='captions' label=processingData.language srclang=processingData.languageCode src=`${filePathWithoutExtension}_${processingData.language}.vtt` default=true)
        else
          track(kind='captions' label=processingData.language srclang=processingData.languageCode src=`${filePathWithoutExtension}.vtt` default=true)
    section.bottomSection
      .buttons
        button.btn#increaseSize Subtitle Text Size +
        button.btn#decreaseSize Subtitle Text Size -
        button.btn#increaseLineHeight Subtitle Spacing +
        button.btn#decreaseLineHeight Subtitle Spacing -
        button.btn#showHideControls Hide Text
      .downloadLinks
        a.btn.startAnotherTranscription(href='/') Start Another Transcription

        // ORIGINAL LANGUAGE FILES
        if processingData.translatedLanguages.length > 1
          span Original Language:
        .srtLinks.links
          span SRT (#{processingData.language})
          a(download href=`${filePathWithoutExtension}.srt`) Download
        .vttLinks.links
          span VTT (#{processingData.language})
          a(href=`${filePathWithoutExtension}.vtt`) View
          a(download href=`${filePathWithoutExtension}.vtt`) Download
        .txtLinks.links
          span TXT (#{processingData.language})
          a(href=`${filePathWithoutExtension}.txt`) View
          a(download href=`${filePathWithoutExtension}.txt`) Download

        // TRANSLATED FILES //
        if processingData.translatedLanguages.length > 0
          p#translationsHeader Translations:
        // translated VTT files
        each language in processingData.translatedLanguages
          .links
            span VTT (#{language})
            a(href=`${filePathWithoutExtension}_${language}.vtt`) View
            a(href=`${filePathWithoutExtension}_${language}.vtt` download) Download
        .links
          a(download href=`${filePathWithoutExtension}${processingData.fileExtension}`) Download File
      .fileDetails
        each property, value in processingData
          p #{value}: #{property}
      #addTranslation
        a(href=`/player/` + renderedFilename + `/add` style="text-decoration:none;")
          p(style="color:rgb(22, 29, 29);") Add Here
            //p Filename: #{processingData.filename}
      if userAuthed
        form(action='/player/#{renderedFilename}/keepMedia?password=#{password}&keepMedia=true' method='POST')
          // form elements go here
          button(type='submit') Keep Media True
        br
        form(action='/player/#{renderedFilename}/keepMedia?password=#{password}&keepMedia=false' method='POST')
          // form elements go here
          button(type='submit') Keep Media False
        br

        //a(href='/player/#{renderedFilename}/add?password=#{password}&keepMedia=true' style="text-decoration:none;")
        //  p(style="") Add Here
        //a(href=`/player/` + renderedFilename + `/add` style="text-decoration:none;")
        //  p(style="color:rgb(22, 29, 29);") Add Here

  script(src = 'https://cdn.plyr.io/3.7.2/plyr.js')
  link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/plyr/3.7.2/plyr.css' integrity='sha512-SwLjzOmI94KeCvAn5c4U6gS/Sb8UC7lrm40Wf+B0MQxEuGyDqheQHKdBmT4U+r+LkdfAiNH4QHrHtdir3pYBaw==' crossorigin='anonymous' referrerpolicy='no-referrer')
  
  include js/js-player
  include js/secondCaptions
  include js/captionsDisplay
  include js/videoProgress

